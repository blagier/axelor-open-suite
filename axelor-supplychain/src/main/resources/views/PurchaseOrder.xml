<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_7.0.xsd">


  <form name="purchase-order-form" title="Purchase order"
    model="com.axelor.apps.purchase.db.PurchaseOrder" id="supplychain-purchase-order-form"
    extension="true">

    <extend target="/">
      <attribute name="onNew"
        value="action-supplychain-group-purchase-order-on-new-actions"/>
    </extend>

    <extend target="//field[@name='shipmentMode']">
      <attribute name="onChange"
        value="action-purchase-order-record-empty-freight-carrier-mode,supplychain-action-create-shipment-cost-line-purchase"/>
      <attribute name="readOnlyIf" value="statusSelect &gt; 1"/>
    </extend>
    <extend target="//panel-related[@name='purchaseOrderLineListPanel']">
      <attribute name="onChange"
        value="action-purchase-order-method-compute,supplychain-action-create-shipment-cost-line-purchase"/>
    </extend>
    
    <extend target="//panel-related[@name='purchaseOrderLineListPanel']">
      <insert position="after">
        <button name="fillFormBtn" title="Fill estimated delivery date" onClick="action-purchase-order-group-fill-date"/>
      </insert>
    </extend>
  </form>

  <action-validate name="action-purchase-order-validate-one-line-selected">
    <error message="Please select at least one line"
           if="eval: !purchaseOrderLineList || !purchaseOrderLineList.size() == 0 || !purchaseOrderLineList?.any{it.selected}"/>
  </action-validate>

  <action-view name="action-purchase-order-fill-date-form" title="Fill estimated delivery date for purchase order"
    model="com.axelor.apps.purchase.db.PurchaseOrder">
    <view type="form" name="purchase-order-fill-date-form"/>
    <context name="_showRecord" expr="eval: id"/>
  </action-view>

  <action-group name="action-purchase-order-group-fill-date"
                model="com.axelor.apps.purchase.db.PurchaseOrder">
      <action name="action-purchase-order-validate-one-line-selected"/>
      <action name="action-purchase-order-fill-date-form"/>
  </action-group>

  <!--
  <action-attrs name="purchase-order-line.add-lines">
    <attribute for="$_purchaseOrderLineList" name="value"
               expr="eval: purchaseOrderLineList?.findAll{it.selected}"/>
  </action-attrs>
  -->

  <action-record name="purchase-order-line.add-lines"
    model="com.axelor.apps.purchase.db.PurchaseOrder">
    <field name="$_purchaseOrderLineList"
           expr="eval: purchaseOrderLineList?.findAll{it.selected}"/>
  </action-record>


  <form name="purchase-order-fill-date-form"
        title="Fill estimated delivery date for purchase order"
        model="com.axelor.apps.purchase.db.PurchaseOrder"
        onLoad="purchase-order-line.add-lines"
        canCopy="false" canDelete="false" canArchive="false"
        canAttach="false" canSave="false" canNew="false">
    <panel name="mainPanel" showTitle="false">
      <field name="estimatedDeliveryDate" title="Estimated delivery date" type="date" required="true"/>
      <field name="$_purchaseOrderLineList" title="PO lines"
             target="com.axelor.apps.purchase.db.PurchaseOrderLine" type="many-to-many"
             grid-view="purchase-order-line-grid" form-view="purchase-order-line-form"
             readonly="true" colSpan="12"
             domain="self.product IS NOT NULL AND self.estimatedReceiptDate IS NULL">
      </field>
      <button name="fillDateBtn" onClick="" title="Update date"/>
    </panel>
  </form>

  <action-group name="action-supplychain-group-purchase-order-on-new-actions">
    <action name="action-group-purchase-order-on-new-actions"/>
    <action name="supplychain-action-create-shipment-cost-line-purchase"/>
  </action-group>

  <action-method name="action-purchase-order-method-generate-control-invoice">
    <call class="com.axelor.apps.supplychain.web.PurchaseOrderInvoiceController"
      method="showPopUpInvoicingWizard"/>
  </action-method>

  <action-method name="action-purchase-order-create-stock-move">
    <call class="com.axelor.apps.supplychain.web.PurchaseOrderController"
      method="createStockMove"/>
  </action-method>

  <action-method name="action-purchase-order-method-get-stock-location">
    <call class="com.axelor.apps.supplychain.web.PurchaseOrderController"
      method="getStockLocation"/>
  </action-method>

  <action-method name="action-purchase-order-method-cancel-receipt">
    <call class="com.axelor.apps.supplychain.web.PurchaseOrderController"
      method="cancelReceipt"/>
  </action-method>

  <action-attrs name="action-purchase-order-attrs-interco">
    <attribute for="interco" name="hidden"
      expr="eval: createdByInterco || !supplierPartner || __repo__(Company).all().filter('self.partner = ?', supplierPartner).fetchOne() == null"/>
    <attribute for="interco" name="readonly" expr="eval: true"
      if="eval: statusSelect &gt; 3"/>
  </action-attrs>

  <action-record name="action-purchase-order-record-interco"
    model="com.axelor.apps.purchase.db.PurchaseOrder">
    <field name="interco"
      expr="eval: __config__.app.getApp('supplychain')?.intercoFromPurchase
            &amp;&amp; !createdByInterco &amp;&amp; supplierPartner &amp;&amp; __repo__(Company).all().filter('self.partner = ?', supplierPartner).fetchOne()"/>
  </action-record>

  <action-view name="action-view-show-invoices-from-purchase-order" title="Invoices"
    model="com.axelor.apps.account.db.Invoice">
    <view type="grid" name="invoice-light-grid"/>
    <view type="form" name="invoice-form"/>
    <domain>self.purchaseOrder.id = :purchaseOrderId OR (self.purchaseOrder.id IS NULL AND
      EXISTS(SELECT 1 FROM self.invoiceLineList inli WHERE inli.purchaseOrderLine.id IN
      (:purchaseOrderLineIdList)))</domain>
    <context name="purchaseOrderId" expr="eval: id"/>
    <context name="purchaseOrderLineIdList"
      expr="eval: (id != null &amp;&amp; purchaseOrderLineList != null &amp;&amp; !purchaseOrderLineList.isEmpty()) ? purchaseOrderLineList.collect{it.id} : null"/>
  </action-view>

  <action-method name="supplychain-action-create-shipment-cost-line-purchase">
    <call class="com.axelor.apps.supplychain.web.PurchaseOrderController"
      method="createShipmentCostLine"/>
  </action-method>



  <action-method name="action-purchase-order-method-get-from-stock-location">
    <call class="com.axelor.apps.supplychain.web.PurchaseOrderController"
      method="getFromStockLocation"/>
  </action-method>

</object-views>
